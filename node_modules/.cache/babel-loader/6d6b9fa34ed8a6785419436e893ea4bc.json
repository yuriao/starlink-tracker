{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\exx\\\\eclipse-workspace-ee\\\\starlink\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY } from '../constant';\nimport Axios from 'axios';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.showNearbySatellite = setting => {\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        observerLat,\n        observerLong,\n        observerAlt,\n        observerRadius\n      } = setting; // destruction, ES6 feature\n\n      const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${observerRadius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        loadingSatellites: true\n      });\n      Axios.get(url) // Axios is a library that handles Ajax response. it use promise object (ES6 feature) (then, catch)\n      .then(response => {\n        //Ajax: step stacks. as JS is single thread, the steps are put into a stack and Ajax call is put into deeper levels of stack, calls until conditions meet\n        this.setState({\n          satInfo: response.data,\n          loadingSatellites: false\n        });\n      }).catch(error => {\n        console.log('err in fetch satellite -> ', error);\n        this.setState({\n          loadingSatellites: false\n        });\n      });\n    };\n\n    this.trackOnClick = () => {\n      console.log(`tracking ${this.state.selected}`);\n    };\n\n    this.addOrRemove = (item, status) => {\n      let {\n        selected: list\n      } = this.state; //equal to: let list = this.state.selected;\n\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (status && !found) {\n        //add\n        list.push(item);\n      }\n\n      if (!status && found) {\n        //remove\n        list = list.filter(entry => {\n          return entry.satid !== item.satid; //item.satid is the unchecked ones\n        });\n      }\n\n      console.log(list);\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.state = {\n      // maintain the data sent by satsetting button\n      loadingSatellites: false,\n      selected: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SatSetting, {\n      onShow: this.showNearbySatellite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SatelliteList, {\n      satInfo: this.state.satInfo,\n      loading: this.state.loadingSatellites,\n      onSelectionChange: this.addOrRemove,\n      disableTrack: this.state.selected.length === 0,\n      trackOnclick: this.trackOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"right\"));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/exx/eclipse-workspace-ee/starlink/src/components/Main.js"],"names":["React","Component","SatSetting","SatelliteList","NEARBY_SATELLITE","STARLINK_CATEGORY","SAT_API_KEY","Axios","Main","constructor","showNearbySatellite","setting","fetchSatellite","observerLat","observerLong","observerAlt","observerRadius","url","setState","loadingSatellites","get","then","response","satInfo","data","catch","error","console","log","trackOnClick","state","selected","addOrRemove","item","status","list","found","some","entry","satid","push","filter","render","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport SatSetting from './SatSetting';\r\nimport SatelliteList from './SatelliteList';\r\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY } from '../constant';\r\nimport Axios from 'axios';\r\n\r\nclass Main extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = { // maintain the data sent by satsetting button\r\n            loadingSatellites: false,\r\n            selected: []\r\n        }\r\n    }\r\n\r\n    showNearbySatellite = (setting) => {\r\n        this.fetchSatellite(setting);\r\n    }\r\n\r\n    fetchSatellite = (setting) => {\r\n        const {observerLat, observerLong, observerAlt, observerRadius} = setting; // destruction, ES6 feature\r\n        const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${observerRadius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\r\n        this.setState({\r\n            loadingSatellites: true,\r\n        })\r\n        Axios.get(url) // Axios is a library that handles Ajax response. it use promise object (ES6 feature) (then, catch)\r\n            .then(response => {//Ajax: step stacks. as JS is single thread, the steps are put into a stack and Ajax call is put into deeper levels of stack, calls until conditions meet\r\n                this.setState({\r\n                    satInfo: response.data,\r\n                    loadingSatellites: false,\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log('err in fetch satellite -> ', error);\r\n                this.setState({\r\n                    loadingSatellites: false,\r\n                })\r\n            })\r\n    }\r\n  \r\n    trackOnClick = () => {\r\n        console.log(`tracking ${this.state.selected}`);\r\n      }\r\n  \r\n    addOrRemove = (item, status) => {\r\n        let { selected: list } = this.state;//equal to: let list = this.state.selected;\r\n        const found = list.some( entry => entry.satid === item.satid);\r\n\r\n        if(status && !found){ //add\r\n            list.push(item)\r\n        }\r\n\r\n        if(!status && found){ //remove\r\n            list = list.filter( entry => {\r\n                return entry.satid !== item.satid;//item.satid is the unchecked ones\r\n            });\r\n        }\r\n        \r\n        console.log(list);\r\n        this.setState({\r\n            selected: list\r\n        }) \r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n        return (\r\n            <div className='main'>\r\n                <div className=\"left-side\">\r\n                    <SatSetting onShow={this.showNearbySatellite}/>\r\n                    <SatelliteList \r\n                        satInfo={this.state.satInfo}\r\n                        loading={this.state.loadingSatellites} \r\n                        onSelectionChange={this.addOrRemove}\r\n                        disableTrack={this.state.selected.length === 0}\r\n                        trackOnclick={this.trackOnClick}/>\r\n                </div>\r\n                <div className=\"right-side\">\r\n                    right\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}